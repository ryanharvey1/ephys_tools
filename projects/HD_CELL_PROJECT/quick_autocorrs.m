% quick_autocorrs
clear
files = dir('C:\Users\ryanh\Downloads\__RawDataFinal_Sept12_2019\**\*')



for i = 1:length(files)
    cur_file = fullfile(files(i).folder,files(i).name);
    disp(cur_file)
    try
        ts = importfile1(cur_file);
    catch
        continue
    end
    if isempty(ts)
        continue
    end
    
    data.ID{i,1}=cur_file;
    
    spk=(ts./100)./1000;

    [data.thetaindex(i,1),~,cor,lag] = thetamodulation(spk);

    data.thetaskip(i,1)=ThetaSkipping(cor,lag,0.01); 

    
    
    fig = figure; fig.Color = [1 1 1];
    plot(lag,cor,'k')
    xlabel('time (seconds)')
    title(['theta index: ',num2str(data.thetaindex(i,1)),'  theta skip ',num2str(data.thetaskip(i,1))])
    
    export_fig(['D:\ryanh\GoogleDrive\autocorrs_for_ben\',files(i).name,'.png'])
    
    close
end

data = struct2table(data);

idx = find(cellfun(@isempty,data.ID));

data(idx,:) = [];

function ts = importfile1(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as a matrix.
%   BC217S03TT1U2 = IMPORTFILE1(FILENAME) Reads data from text file
%   FILENAME for the default selection.
%
%   BC217S03TT1U2 = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   bc217s03TT1u2 = importfile1('bc217_s03_TT1_u2.ts_R', 2, 936);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/10/12 10:24:20

%% Initialize variables.
delimiter = ' ';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    dataArray{1} = [dataArray{1};dataArrayBlock{1}];
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
ts = [dataArray{1:end-1}];
end

