%  create a channel map file

Nchannels = 32;
connected = true(Nchannels, 1);
chanMap   = 1:Nchannels;
chanMap0ind = chanMap - 1;

% ycoords = [100,100,120,120,...
%     220, 220, 240, 240,...
%     340,340,360,360,...
%     460,460,480,480,...
%     580,580,600,600,...
%     700,700,720,720,...
%     820,820,840,840,...
%     940,940,960,960,...
%     1060,1060,1080,1080,...
%     1180,1180,1200,1200,...
%     1300,1300,1320,1320,...
%     1420,1420,1440,1440,...
%     1540,1540,1560,1560,...
%     1660,1660,1680,1680,...
%     1780,1780,1800,1800,...
%     1900,1900,1920,1920]';

% xcoords=repmat([0;1;0;1],Nchannels/4,1)*20;


xcoords=[0.25,0.75,0.25,0.75,...
    0.25,0.75,0.25,0.75,...
    0.25,0.75,0.25,0.75,...
    0.25,0.75,0.25,0.75,...
    2.25,2.75,2.25,2.75,...
    2.25,2.75,2.25,2.75,...
    2.25,2.75,2.25,2.75,...
    2.25,2.75,2.25,2.75]'*10;

ycoords=[0.25,0.25,0.75,0.75,...
    2.25,2.25,2.75,2.75,...
    4.25,4.25,4.75,4.75,...
    6.25,6.25,6.75,6.75,...
    0.25,0.25,0.75,0.75,...
    2.25,2.25,2.75,2.75,...
    4.25,4.25,4.75,4.75,...
    6.25,6.25,6.75,6.75]'*10;


n = Nchannels/4;
m = 4;
kcoords=(reshape(repmat(1:n, m, 1), n*m, 1));


figure;scatter(xcoords,ycoords,40,kcoords,'filled');colormap jet
axis image

fs = 32000; % sampling frequency
save('D:\ryanh\github\Kilosort2\configFiles\8tt_kubie_chanMap_v2.mat', ...
    'chanMap','connected', 'xcoords', 'ycoords', 'kcoords', 'chanMap0ind', 'fs')

%%

Nchannels = 32;
connected = true(Nchannels, 1);
chanMap   = 1:Nchannels;
chanMap0ind = chanMap - 1;

xcoords   = repmat([1 2 3 4]', 1, Nchannels/4);
xcoords   = xcoords(:);
ycoords   = repmat(1:Nchannels/4, 4, 1);
ycoords   = ycoords(:);
kcoords   = ones(Nchannels,1); % grouping of channels (i.e. tetrode groups)

fs = 25000; % sampling frequency

save('C:\DATA\Spikes\Piroska\chanMap.mat', ...
    'chanMap','connected', 'xcoords', 'ycoords', 'kcoords', 'chanMap0ind', 'fs')
%%

% kcoords is used to forcefully restrict templates to channels in the same
% channel group. An option can be set in the master_file to allow a fraction 
% of all templates to span more channel groups, so that they can capture shared 
% noise across all channels. This option is

% ops.criterionNoiseChannels = 0.2; 

% if this number is less than 1, it will be treated as a fraction of the total number of clusters

% if this number is larger than 1, it will be treated as the "effective
% number" of channel groups at which to set the threshold. So if a template
% occupies more than this many channel groups, it will not be restricted to
% a single channel group. 