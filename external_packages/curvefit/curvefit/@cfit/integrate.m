function [int,wmsg] = integrate(fitobj,x,x0)
%INTEGRATE  Integrate a fit result object.
%   INT = INTEGRATE(FITOBJ, X, X0) integrates the model FITOBJ at the points
%   specified by X starting from X0 and returns the result in INT. FITOBJ is a
%   cfit object generated by the FIT or CFIT function. X is a column vector.
%   X0 is a scalar. INT is a column vector.
%
%   See also CFIT/DIFFERENTIATE, FIT, CFIT.

%   Copyright 1999-2008 The MathWorks, Inc.
%   $Revision: 1.8.2.8 $  $Date: 2010/10/08 16:37:04 $

if nargin < 3
    error(message('curvefit:integrate:threeInputArgsRequired'));
end

if ~isa(fitobj,'cfit')
    error(message('curvefit:integrate:invalidFirstArg'));
end

if nargout > 1
    [lw,lwid] = lastwarn;
    ws = warning('off', 'all');
    lastwarn('');
end

try
    integH = integexpr(fitobj); % get integral handle;
    if isempty(integH) % no integral handle
        % It is not necessary to center and scale X here, because that
        % is done within the feval calls below
        sorted = 0;
        if any(diff(x)<0)
            sorted = 1;
            [x, idx] = sort(x(:));
        end
        int = zeros(size(x));
        int(1) = quad(fitobj,x0,x(1));
        for i = 2:length(x)
            int(i) = quad(fitobj,x(i-1),x(i));
        end
        int = cumsum(int);
        if sorted
            int(idx) = int;
        end
    else % with integral handle (either from library or customer)
        % Center and scale X if necessary, then adjust result at the end
        xin = ([x0;x(:)] - fitobj.meanx) / fitobj.stdx;
        h = constants(fitobj);
        int = feval(integH,fitobj.coeffValues{:},fitobj.probValues{:},h{:},xin);
        int = fitobj.stdx * (int(2:end)-int(1));
    end
catch e
    if nargout > 1
        warning(ws);
    end
    rethrow( e );
end

if nargout > 1
    wmsg = lastwarn;
    warning(ws);
    lastwarn(lw,lwid);
end

